// import React, { useState } from "react";
// import { useNavigate } from "react-router-dom";

// const AddMachine = () => {
//     const navigate = useNavigate();

//     // State ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
//     const [formData, setFormData] = useState({
//         machineID: "",
//         type: "Small Washer",
//         model: "",
//     });

//     // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
//     const handleChange = (e) => {
//         const { name, value } = e.target;
//         setFormData((prev) => ({
//             ...prev,
//             [name]: value,
//         }));
//     };

//     // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Cancel"
//     const handleCancel = () => {
//         navigate("/Home");
//     };

//     // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Save"
//     const handleSave = async (e) => {
//         e.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà
//         try {
//             const response = await fetch("http://localhost:8000/api/machines/", {
//                 method: "POST",
//                 headers: {
//                     "Content-Type": "application/json",
//                 },
//                 body: JSON.stringify(formData),
//             });

//             if (response.ok) {
//                 alert("Machine added successfully!");
//                 navigate("/Home"); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
//             } else {
//                 alert("Failed to add machine");
//             }
//         } catch (error) {
//             console.error("Error:", error);
//             alert("Error adding machine");
//         }
//     };

//     return (
//         <div className="form-2">
//             <header>
//                 <div className="logo-lg">
//                     <img className="logoimage" src="./Logo.png" alt="Logo" />
//                     <h1 className="logomessage">Welcome to WashAlytics</h1>
//                     <p>Please Enter your machine Information</p>
//                 </div>
//             </header>

//             <main className="main-lg">
//                 <h2>Machine Information</h2>
//                 <form className="info-form" onSubmit={handleSave}>
//                     <label htmlFor="machineID" className="tx">Machine ID</label><br />
//                     <input 
//                         type="text" 
//                         id="machineID" 
//                         name="machineID" 
//                         className="input-bx long-input" 
//                         placeholder="Machine ID" 
//                         value={formData.machineID}
//                         onChange={handleChange}
//                     />

//                     <label htmlFor="type" className="tx password">Machine Type</label><br />
//                     <select 
//                         className="input-bx input-bx long-input selected" 
//                         name="type" 
//                         id="type"
//                         value={formData.type}
//                         onChange={handleChange}
//                     >
//                         <option value="Small Washer">Small Washer</option>
//                         <option value="Medium Washer">Medium Washer</option>
//                         <option value="Large Washer">Large Washer</option>
//                         <option value="Dryer">Dryer</option>
//                         <option value="Coin">Coin</option>
//                     </select>

//                     <label htmlFor="model" className="tx password">Machine Model</label><br />
//                     <input 
//                         type="text" 
//                         id="model" 
//                         name="model" 
//                         className="input-bx long-input" 
//                         placeholder="Machine Model" 
//                         value={formData.model}
//                         onChange={handleChange}
//                     />

//                     <div className="save-cancle">
//                         <button onClick={handleCancel} type="button" className="blg-btn cancel">Cancel</button>
//                         <button type="submit" className="bl-btn save">Save</button>
//                     </div>
//                 </form>
//             </main>
//         </div>
//     );
// };

// export default AddMachine;

import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";

const AddMachine = () => {
    const navigate = useNavigate();
    
    // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    const [machineData, setMachineData] = useState({
        name: "",
        machine_id: "",
        type: "Washer",  // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤
        times_used: 0,
        date_added: new Date().toISOString().split("T")[0]  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    });

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    const handleChange = (e) => {
        const { name, value } = e.target;
        setMachineData((prevData) => ({
            ...prevData,
            [name]: value,
        }));
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const response = await axios.post('http://localhost:8000/api/machines/', machineData)            ;
            console.log("‚úÖ Machine Added:", response.data);
            alert("üéâ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            navigate("/"); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home
        } catch (error) {
            console.error("‚ùå Error adding machine:", error);
            alert("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!");
        }
    };

    return (
        <div className="container">
            <h2>üõ†Ô∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤/‡∏≠‡∏ö‡∏ú‡πâ‡∏≤</h2>
            <form onSubmit={handleSubmit}>
                <label>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á:</label>
                <input type="text" name="name" value={machineData.name} onChange={handleChange} required />

                <label>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á:</label>
                <input type="text" name="machine_id" value={machineData.machine_id} onChange={handleChange} required />

                <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á:</label>
                <select name="type" value={machineData.type} onChange={handleChange}>
                    <option value="Washer">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤</option>
                    <option value="Dryer">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏ö‡∏ú‡πâ‡∏≤</option>
                </select>

                <label>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:</label>
                <input type="number" name="times_used" value={machineData.times_used} onChange={handleChange} min="0" required />

                <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°:</label>
                <input type="date" name="date_added" value={machineData.date_added} onChange={handleChange} required />

                <button type="submit">‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                <button type="button" onClick={() => navigate("/home")}>‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </form>
        </div>
    );
};

export default AddMachine;
